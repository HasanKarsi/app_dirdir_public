// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:app_dirdir/App/KonusmalarimPage.dart';
import 'package:app_dirdir/App/KullanicilarPage.dart';
import 'package:app_dirdir/App/MyCostomButtomNavi.dart';
import 'package:app_dirdir/App/ProfilPage.dart';
import 'package:app_dirdir/App/TabItems.dart';
import 'package:app_dirdir/ViewModel/AllUserViewModel.dart';
import 'package:app_dirdir/services/FirebaseCMServices.dart';
import 'package:app_dirdir/services/LocalNotificationService.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:app_dirdir/model/UserModel.dart';
import 'package:provider/provider.dart';

/// UygulamanÄ±n ana sayfasÄ±.
/// KullanÄ±cÄ± oturum aÃ§mÄ±ÅŸsa bu sayfa gÃ¶sterilir.
class HomePage extends StatefulWidget {
  /// Firebase'den alÄ±nan kullanÄ±cÄ± bilgisi.
  /// Bu bilgi, oturum aÃ§mÄ±ÅŸ kullanÄ±cÄ±yÄ± temsil eder.

  final UserModel user;

  /// Ana sayfa widget'Ä±.
  /// KullanÄ±cÄ± bilgisi (`user`) parametre olarak alÄ±nÄ±r.
  const HomePage({super.key, required this.user});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  TabItem _currentTab = TabItem.Kullanicilar; // VarsayÄ±lan sekme

  /// Navigator anahtarlarÄ±, her sekme iÃ§in ayrÄ± bir navigator state'i tutar.
  Map<TabItem, GlobalKey<NavigatorState>> navigatorKeys = {
    TabItem.Kullanicilar: GlobalKey<NavigatorState>(),
    TabItem.Profil: GlobalKey<NavigatorState>(),
    TabItem.Konusmalarim: GlobalKey<NavigatorState>(),
  };

  Map<TabItem, Widget> tumSayfalar() {
    return {
      TabItem.Kullanicilar: ChangeNotifierProvider(
        create: (context) => AllUserViewModel(),
        child: KullanicilarPage(),
      ),
      TabItem.Konusmalarim:
          const KonusmalarimPage(), // KonuÅŸmalarÄ±m sayfasÄ±nÄ± dÃ¶nerir
      TabItem.Profil: const ProfilPage(), // Profil sayfasÄ±nÄ± dÃ¶nerir
    };
  }

  @override
  Widget build(BuildContext context) {
    return FCMWrapper(
      child: Container(
        child: Mycostombuttomnavi(
          navigatorKeys: navigatorKeys, // Navigator anahtarlarÄ±nÄ± saÄŸlar
          sayfaOlusturucu: tumSayfalar(),
          currentTab: _currentTab,
          onSelectTab: (secilenTab) {
            if (secilenTab == _currentTab) {
              // EÄŸer kullanÄ±cÄ± zaten seÃ§ili sekmeye tÄ±kladÄ±ysa
              navigatorKeys[secilenTab]!.currentState?.popUntil(
                (route) => route.isFirst,
              ); // Navigator'Ä± ilk sayfaya geri dÃ¶ndÃ¼rÃ¼r
            }
            setState(() {
              _currentTab =
                  secilenTab; // KullanÄ±cÄ±nÄ±n seÃ§tiÄŸi sekmeyi gÃ¼nceller
            });
            debugPrint(
              'SeÃ§ilen sekme: ${TabItemsData.tumTablolar[secilenTab]!.title}',
            ); // SeÃ§ilen sekmeyi konsola yazdÄ±rÄ±r
          },
        ),
      ),
    );
  }
}

class FCMWrapper extends StatefulWidget {
  final Widget child;

  const FCMWrapper({super.key, required this.child});

  @override
  State<FCMWrapper> createState() => _FCMWrapperState();
}

class _FCMWrapperState extends State<FCMWrapper> {
  get navigatorKeys => null;

  @override
  void initState() {
    super.initState();
    _initFCM();
  }

  void _initFCM() async {
    // Yerel bildirim servisini baÅŸlat
    LocalNotificationService.initialize();
    await LocalNotificationService.createNotificationChannel();

    print('ğŸ“± Local Notification Service baÅŸlatÄ±ldÄ±');

    // FCM'i baÅŸlat (token al, kaydet ve refresh listener baÅŸlat)
    await FirebaseCMServices.instance.initializeFCM();

    // Foreground message handler - Uygulama iÃ§inde SnackBar gÃ¶ster
    FirebaseMessaging.onMessage.listen((RemoteMessage message) {
      print('ğŸ“± Foreground message alÄ±ndÄ±: ${message.notification?.title}');

      // Uygulama aÃ§Ä±kken SnackBar gÃ¶ster (daha iyi UX)
      LocalNotificationService.showInAppNotification(message);
    });

    // Message tÄ±klandÄ±ÄŸÄ±nda
    FirebaseMessaging.onMessageOpenedApp.listen((RemoteMessage message) {
      print('ğŸ“± Message aÃ§Ä±ldÄ±: ${message.notification?.title}');
      // Burada belirli bir sayfaya yÃ¶nlendirme yapabilirsiniz
      if (message.data['page'] == 'KonusmalarimPage.dart') {
        //Ilerleyen Surecte cypilacak!!!!!!!!!!!!!!
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return widget.child;
  }
}
